//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.bluetooth_low_energy;

@kotlin.jvm.JvmSynthetic
public inline fun event(block: dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.bluetooth_low_energy.Messages.Event =
  dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl._create(dev.yanshouwang.bluetooth_low_energy.Messages.Event.newBuilder()).apply { block() }._build()
public object EventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.yanshouwang.bluetooth_low_energy.Messages.Event.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.bluetooth_low_energy.Messages.Event.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.bluetooth_low_energy.Messages.Event = _builder.build()

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.EventCategory category = 1;</code>
     */
    public var category: dev.yanshouwang.bluetooth_low_energy.Messages.EventCategory
      @JvmName("getCategory")
      get() = _builder.getCategory()
      @JvmName("setCategory")
      set(value) {
        _builder.setCategory(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.EventCategory category = 1;</code>
     */
    public fun clearCategory() {
      _builder.clearCategory()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedEvent bluetooth_state_changed_event = 2;</code>
     */
    public var bluetoothStateChangedEvent: dev.yanshouwang.bluetooth_low_energy.Messages.BluetoothStateChangedEvent
      @JvmName("getBluetoothStateChangedEvent")
      get() = _builder.getBluetoothStateChangedEvent()
      @JvmName("setBluetoothStateChangedEvent")
      set(value) {
        _builder.setBluetoothStateChangedEvent(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedEvent bluetooth_state_changed_event = 2;</code>
     */
    public fun clearBluetoothStateChangedEvent() {
      _builder.clearBluetoothStateChangedEvent()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedEvent bluetooth_state_changed_event = 2;</code>
     * @return Whether the bluetoothStateChangedEvent field is set.
     */
    public fun hasBluetoothStateChangedEvent(): kotlin.Boolean {
      return _builder.hasBluetoothStateChangedEvent()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredEvent central_discovered_event = 3;</code>
     */
    public var centralDiscoveredEvent: dev.yanshouwang.bluetooth_low_energy.Messages.CentralDiscoveredEvent
      @JvmName("getCentralDiscoveredEvent")
      get() = _builder.getCentralDiscoveredEvent()
      @JvmName("setCentralDiscoveredEvent")
      set(value) {
        _builder.setCentralDiscoveredEvent(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredEvent central_discovered_event = 3;</code>
     */
    public fun clearCentralDiscoveredEvent() {
      _builder.clearCentralDiscoveredEvent()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredEvent central_discovered_event = 3;</code>
     * @return Whether the centralDiscoveredEvent field is set.
     */
    public fun hasCentralDiscoveredEvent(): kotlin.Boolean {
      return _builder.hasCentralDiscoveredEvent()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostEvent gatt_connection_lost_event = 4;</code>
     */
    public var gattConnectionLostEvent: dev.yanshouwang.bluetooth_low_energy.Messages.GattConnectionLostEvent
      @JvmName("getGattConnectionLostEvent")
      get() = _builder.getGattConnectionLostEvent()
      @JvmName("setGattConnectionLostEvent")
      set(value) {
        _builder.setGattConnectionLostEvent(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostEvent gatt_connection_lost_event = 4;</code>
     */
    public fun clearGattConnectionLostEvent() {
      _builder.clearGattConnectionLostEvent()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostEvent gatt_connection_lost_event = 4;</code>
     * @return Whether the gattConnectionLostEvent field is set.
     */
    public fun hasGattConnectionLostEvent(): kotlin.Boolean {
      return _builder.hasGattConnectionLostEvent()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedEvent gatt_characteristic_value_changed_event = 5;</code>
     */
    public var gattCharacteristicValueChangedEvent: dev.yanshouwang.bluetooth_low_energy.Messages.GattCharacteristicValueChangedEvent
      @JvmName("getGattCharacteristicValueChangedEvent")
      get() = _builder.getGattCharacteristicValueChangedEvent()
      @JvmName("setGattCharacteristicValueChangedEvent")
      set(value) {
        _builder.setGattCharacteristicValueChangedEvent(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedEvent gatt_characteristic_value_changed_event = 5;</code>
     */
    public fun clearGattCharacteristicValueChangedEvent() {
      _builder.clearGattCharacteristicValueChangedEvent()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedEvent gatt_characteristic_value_changed_event = 5;</code>
     * @return Whether the gattCharacteristicValueChangedEvent field is set.
     */
    public fun hasGattCharacteristicValueChangedEvent(): kotlin.Boolean {
      return _builder.hasGattCharacteristicValueChangedEvent()
    }
    public val stubCase: dev.yanshouwang.bluetooth_low_energy.Messages.Event.StubCase
      @JvmName("getStubCase")
      get() = _builder.getStubCase()

    public fun clearStub() {
      _builder.clearStub()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.yanshouwang.bluetooth_low_energy.Messages.Event.copy(block: dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.bluetooth_low_energy.Messages.Event =
  dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()
