//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.bluetooth_low_energy;

@kotlin.jvm.JvmSynthetic
public inline fun event(block: dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.bluetooth_low_energy.Messages.Event =
  dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl._create(dev.yanshouwang.bluetooth_low_energy.Messages.Event.newBuilder()).apply { block() }._build()
public object EventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.yanshouwang.bluetooth_low_energy.Messages.Event.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.bluetooth_low_energy.Messages.Event.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.bluetooth_low_energy.Messages.Event = _builder.build()

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.EventCategory category = 1;</code>
     */
    public var category: dev.yanshouwang.bluetooth_low_energy.Messages.EventCategory
      @JvmName("getCategory")
      get() = _builder.getCategory()
      @JvmName("setCategory")
      set(value) {
        _builder.setCategory(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.EventCategory category = 1;</code>
     */
    public fun clearCategory() {
      _builder.clearCategory()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedArguments bluetooth_state_changed_arguments = 2;</code>
     */
    public var bluetoothStateChangedArguments: dev.yanshouwang.bluetooth_low_energy.Messages.BluetoothStateChangedArguments
      @JvmName("getBluetoothStateChangedArguments")
      get() = _builder.getBluetoothStateChangedArguments()
      @JvmName("setBluetoothStateChangedArguments")
      set(value) {
        _builder.setBluetoothStateChangedArguments(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedArguments bluetooth_state_changed_arguments = 2;</code>
     */
    public fun clearBluetoothStateChangedArguments() {
      _builder.clearBluetoothStateChangedArguments()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.BluetoothStateChangedArguments bluetooth_state_changed_arguments = 2;</code>
     * @return Whether the bluetoothStateChangedArguments field is set.
     */
    public fun hasBluetoothStateChangedArguments(): kotlin.Boolean {
      return _builder.hasBluetoothStateChangedArguments()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredArguments central_discovered_arguments = 3;</code>
     */
    public var centralDiscoveredArguments: dev.yanshouwang.bluetooth_low_energy.Messages.CentralDiscoveredArguments
      @JvmName("getCentralDiscoveredArguments")
      get() = _builder.getCentralDiscoveredArguments()
      @JvmName("setCentralDiscoveredArguments")
      set(value) {
        _builder.setCentralDiscoveredArguments(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredArguments central_discovered_arguments = 3;</code>
     */
    public fun clearCentralDiscoveredArguments() {
      _builder.clearCentralDiscoveredArguments()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.CentralDiscoveredArguments central_discovered_arguments = 3;</code>
     * @return Whether the centralDiscoveredArguments field is set.
     */
    public fun hasCentralDiscoveredArguments(): kotlin.Boolean {
      return _builder.hasCentralDiscoveredArguments()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostArguments gatt_connection_lost_arguments = 4;</code>
     */
    public var gattConnectionLostArguments: dev.yanshouwang.bluetooth_low_energy.Messages.GattConnectionLostArguments
      @JvmName("getGattConnectionLostArguments")
      get() = _builder.getGattConnectionLostArguments()
      @JvmName("setGattConnectionLostArguments")
      set(value) {
        _builder.setGattConnectionLostArguments(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostArguments gatt_connection_lost_arguments = 4;</code>
     */
    public fun clearGattConnectionLostArguments() {
      _builder.clearGattConnectionLostArguments()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattConnectionLostArguments gatt_connection_lost_arguments = 4;</code>
     * @return Whether the gattConnectionLostArguments field is set.
     */
    public fun hasGattConnectionLostArguments(): kotlin.Boolean {
      return _builder.hasGattConnectionLostArguments()
    }

    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedArguments characteristic_value_changed_arguments = 5;</code>
     */
    public var characteristicValueChangedArguments: dev.yanshouwang.bluetooth_low_energy.Messages.GattCharacteristicValueChangedArguments
      @JvmName("getCharacteristicValueChangedArguments")
      get() = _builder.getCharacteristicValueChangedArguments()
      @JvmName("setCharacteristicValueChangedArguments")
      set(value) {
        _builder.setCharacteristicValueChangedArguments(value)
      }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedArguments characteristic_value_changed_arguments = 5;</code>
     */
    public fun clearCharacteristicValueChangedArguments() {
      _builder.clearCharacteristicValueChangedArguments()
    }
    /**
     * <code>.dev.yanshouwang.bluetooth_low_energy.GattCharacteristicValueChangedArguments characteristic_value_changed_arguments = 5;</code>
     * @return Whether the characteristicValueChangedArguments field is set.
     */
    public fun hasCharacteristicValueChangedArguments(): kotlin.Boolean {
      return _builder.hasCharacteristicValueChangedArguments()
    }
    public val argumentsCase: dev.yanshouwang.bluetooth_low_energy.Messages.Event.ArgumentsCase
      @JvmName("getArgumentsCase")
      get() = _builder.getArgumentsCase()

    public fun clearArguments() {
      _builder.clearArguments()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.yanshouwang.bluetooth_low_energy.Messages.Event.copy(block: dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.bluetooth_low_energy.Messages.Event =
  dev.yanshouwang.bluetooth_low_energy.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()
